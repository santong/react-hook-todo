{"version":3,"sources":["Todo.js","App.js","index.js"],"names":["TodoDispatch","React","createContext","reducer","state","action","todoList","type","id","Date","now","push","mission","status","find","item","Object","objectSpread","AddTodoForm","dispatch","useContext","_useState","useState","_useState2","slicedToArray","setMission","inputEl","useRef","react_default","a","createElement","className","ref","value","onChange","e","target","onClick","length","TodoList","_ref2","console","log","filter","map","todo","key","Todo","_ref","_ref$todoList","_useReducer","useReducer","_useReducer2","Provider","Todo_TodoList","Todo_AddTodoForm","MOCK_DATA","loadDataAsync","Promise","resolve","reject","setTimeout","App","setTodoList","_useState3","_useState4","isFinish","setIsFinish","then","todoListFromCloud","catch","src_Todo","ReactDOM","render","src_App","document","getElementById"],"mappings":"+KACMA,EAAeC,IAAMC,cAAc,MAQnCC,EAAU,SAACC,EAAOC,GACtB,IAAMC,EAAWF,EAAME,SACfC,EAASF,EAATE,KAER,GAAa,QAATA,EAAgB,CAClB,IAAMC,EAAKC,KAAKC,MAChBJ,EAASK,KAAK,CACZH,KACAI,QAASP,EAAOO,QAChBC,OAAQ,eAEL,GAAa,SAATN,GAA4B,YAATA,EAAoB,CACnCD,EAASQ,KAAK,SAAAC,GAAI,OAAIA,EAAKP,KAAOH,EAAOG,KACjDK,OAASN,EAGhB,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GAAKZ,EAAZ,CAAmBE,cAafY,EAAc,WAClB,IAAMC,EAAWC,qBAAWpB,GADJqB,EAEMC,mBAAS,IAFfC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAK,EAAA,GAEjBT,EAFiBW,EAAA,GAERE,EAFQF,EAAA,GAGlBG,EAAUC,iBAAO,MAQvB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SACEE,IAAKN,EACLnB,KAAK,OACL0B,MAAOrB,EACPsB,SAAU,SAAAC,GAAC,OAAIV,EAAWU,EAAEC,OAAOH,UAErCL,EAAAC,EAAAC,cAAA,UAAQO,QAAS,YAbdzB,GAAWA,EAAQ0B,QAAU,IAClCb,EAAW,IACXN,EAAS,CAAEZ,KAAM,MAAOK,eAWtB,iBAKA2B,EAAW,SAAAC,GAAkB,IAAflC,EAAekC,EAAflC,SAClBmC,QAAQC,IAAIpC,GACZ,IAAMa,EAAWC,qBAAWpB,GAE5B,OADAM,EAAWA,EAASqC,OAAO,SAAA5B,GAAI,MAAoB,YAAhBA,EAAKF,SAEtCe,EAAAC,EAAAC,cAAA,WACGxB,EAASsC,IAAI,SAAAC,GAAQ,IACZrC,EAAwBqC,EAAxBrC,GAAII,EAAoBiC,EAApBjC,QAASC,EAAWgC,EAAXhC,OACrB,OACEe,EAAAC,EAAAC,cAAA,OAAKgB,IAAKtC,EAAIuB,UAAU,qBACtBH,EAAAC,EAAAC,cAAA,qBAAalB,GACbgB,EAAAC,EAAAC,cAAA,qBAAajB,GACD,UAAXA,GACCe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQO,QAAS,kBAAMlB,EAAS,CAAEX,KAAID,KAAM,WAA5C,QAGAqB,EAAAC,EAAAC,cAAA,UAAQO,QAAS,kBAAMlB,EAAS,CAAEX,KAAID,KAAM,cAA5C,gBAYDwC,EA/DF,SAAAC,GAAuB,IAAAC,EAAAD,EAApB1C,gBAAoB,IAAA2C,EAAT,GAASA,EAAAC,EACRC,qBAAWhD,EAAS,CAAEG,aADd8C,EAAApC,OAAAQ,EAAA,EAAAR,CAAAkC,EAAA,GAC3B9C,EAD2BgD,EAAA,GACpBjC,EADoBiC,EAAA,GAElC,OACExB,EAAAC,EAAAC,cAAC9B,EAAaqD,SAAd,CAAuBpB,MAAOd,GAC5BS,EAAAC,EAAAC,cAACwB,EAAD,CAAUhD,SAAUF,EAAME,WAC1BsB,EAAAC,EAAAC,cAACyB,EAAD,QC7BAC,EAAY,CAChB,CACEhD,GAAI,IACJI,QAAS,wBACTC,OAAQ,QAEV,CACEL,GAAI,KACJI,QAAS,0BACTC,OAAQ,SAEV,CACEL,GAAI,KACJI,QAAS,sBACTC,OAAQ,SAEV,CACEL,GAAI,KACJI,QAAS,yBACTC,OAAQ,UAIN4C,EAAgB,WACpB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACTF,EAAQH,IACP,QAoBQM,MAhBf,WAAe,IAAAzC,EACmBC,mBAAS,IAD5BC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAK,EAAA,GACNf,EADMiB,EAAA,GACIwC,EADJxC,EAAA,GAAAyC,EAEmB1C,oBAAS,GAF5B2C,EAAAjD,OAAAQ,EAAA,EAAAR,CAAAgD,EAAA,GAENE,EAFMD,EAAA,GAEIE,EAFJF,EAAA,GAab,OATAR,IACGW,KAAK,SAAAC,GACJN,EAAYM,GACZF,GAAY,KAEbG,MAAM,SAAAnC,GACLgC,GAAY,KAGTvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,IAAuBmC,GAAYtC,EAAAC,EAAAC,cAACyC,EAAD,CAAMjE,SAAUA,MC3C5DkE,IAASC,OAAQ7C,EAAAC,EAAAC,cAAE4C,EAAF,MAAYC,SAASC,eAAe","file":"static/js/main.d701945a.chunk.js","sourcesContent":["import React, { useState, useReducer, useRef, useContext } from \"react\";\nconst TodoDispatch = React.createContext(null);\n/**\n * todo:\n *  id: Date.now()\n *  mission: string\n *  status: doing / done / deleted\n */\n\nconst reducer = (state, action) => {\n  const todoList = state.todoList;\n  const { type } = action;\n\n  if (type === \"add\") {\n    const id = Date.now();\n    todoList.push({\n      id,\n      mission: action.mission,\n      status: \"doing\"\n    });\n  } else if (type === \"done\" || type === \"deleted\") {\n    const todo = todoList.find(item => item.id === action.id);\n    todo.status = type;\n  }\n\n  return { ...state, todoList };\n};\n\nconst Todo = ({ todoList = [] }) => {\n  const [state, dispatch] = useReducer(reducer, { todoList });\n  return (\n    <TodoDispatch.Provider value={dispatch}>\n      <TodoList todoList={state.todoList} />\n      <AddTodoForm />\n    </TodoDispatch.Provider>\n  );\n};\n\nconst AddTodoForm = () => {\n  const dispatch = useContext(TodoDispatch);\n  const [mission, setMission] = useState(\"\");\n  const inputEl = useRef(null);\n\n  const onButtonClick = () => {\n    if (!mission || mission.length <= 0) return;\n    setMission(\"\");\n    dispatch({ type: \"add\", mission });\n  };\n\n  return (\n    <div className=\"add-mission-wrapper\">\n      <input\n        ref={inputEl}\n        type=\"text\"\n        value={mission}\n        onChange={e => setMission(e.target.value)}\n      />\n      <button onClick={() => onButtonClick()}>Add mission</button>\n    </div>\n  );\n};\n\nconst TodoList = ({ todoList }) => {\n  console.log(todoList);\n  const dispatch = useContext(TodoDispatch);\n  todoList = todoList.filter(item => item.status !== \"deleted\");\n  return (\n    <div>\n      {todoList.map(todo => {\n        const { id, mission, status } = todo;\n        return (\n          <div key={id} className=\"todo-item-wrapper\">\n            <p>Mission: {mission}</p>\n            <p>Status : {status}</p>\n            {status === \"doing\" && (\n              <div>\n                <button onClick={() => dispatch({ id, type: \"done\" })}>\n                  done\n                </button>\n                <button onClick={() => dispatch({ id, type: \"deleted\" })}>\n                  delete\n                </button>\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\n\nimport Todo from \"./Todo\";\n\nconst MOCK_DATA = [\n  {\n    id: 1000,\n    mission: \"测试 useState\",\n    status: \"done\"\n  },\n  {\n    id: 1001,\n    mission: \"测试 useReducer\",\n    status: \"doing\"\n  },\n  {\n    id: 1002,\n    mission: \"测试 useRef\",\n    status: \"doing\"\n  },\n  {\n    id: 1003,\n    mission: \"测试 useEffect\",\n    status: \"doing\"\n  }\n];\n\nconst loadDataAsync = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(MOCK_DATA);\n    }, 1000);\n  });\n};\n\nfunction App() {\n  const [todoList, setTodoList] = useState([]);\n  const [isFinish, setIsFinish] = useState(false);\n\n  loadDataAsync()\n    .then(todoListFromCloud => {\n      setTodoList(todoListFromCloud);\n      setIsFinish(true);\n    })\n    .catch(e => {\n      setIsFinish(true);\n    });\n\n  return <div className=\"App\"> {isFinish && <Todo todoList={todoList} />}</div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}